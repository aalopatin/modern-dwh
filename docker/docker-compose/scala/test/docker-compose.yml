name: mdwh

x-sensor-defaults: &sensor-defaults
  image: mdwh/sensor-scala:latest
  depends_on:
    broker:
      condition: service_healthy
    schema-registry:
      condition: service_healthy
  environment:
    KAFKA_TOPIC: sensors
    KAFKA_BOOTSTRAP_SERVERS: broker:9092
    KAFKA_SCHEMA_REGISTRY_URL: http://schema-registry:8081
  volumes:
    - ./volumes/sensors/application.conf:/application.conf
    - ./volumes/sensors/checkpoints:/checkpoints
  networks:
    - mdwh-network

services:
  broker:
    image: apache/kafka:latest
    container_name: broker
    ports:
      - 19092:19092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT_HOST://0.0.0.0:19092,CONTROLLER://localhost:9093,PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://localhost:19092,PLAINTEXT://broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 5
      KAFKA_LOG_DIRS: /tmp/kafka/data
      KAFKA_METADATA_LOG_DIR: /tmp/kafka/meta
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./volumes/kafka/data:/tmp/kafka/data
      - ./volumes/kafka/meta:/tmp/kafka/meta  
    networks:
      - mdwh-network
  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    container_name: schema-registry
    ports:
      - 8081:8081
    depends_on:
      broker:
        condition: service_healthy
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://broker:9092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/subjects"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - mdwh-network
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - 8088:8080
    depends_on:
      broker:
        condition: service_started
      schema-registry:
        condition: service_started
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:9092
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - mdwh-network
  sensor-th0101:
    <<: *sensor-defaults
    container_name: sensor-TH0101
    command: TH0101
  sensor-t0102:
    <<: *sensor-defaults
    container_name: sensor-T0102
    command: T0102
  sensor-h0102:
    <<: *sensor-defaults
    container_name: sensor-H0102
    command: H0102
networks:
  mdwh-network:
    name: mdwh-network